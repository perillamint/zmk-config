/*
 * Copyright (c) 2021 Nick Winans
 * Copyright (c) 2022 perillamint
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
	macros {
		lin_vd_u: lin_vd_u {
			label = "ZM_lin_vd_u";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LCTRL &kp LGUI>
				, <&macro_tap &kp UP>
				, <&macro_release &kp LCTRL &kp LGUI>
				;
		};
		lin_vd_d: lin_vd_d {
			label = "ZM_lin_vd_d";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LCTRL &kp LGUI>
				, <&macro_tap &kp DOWN>
				, <&macro_release &kp LCTRL &kp LGUI>
				;
		};
		lin_vd_l: lin_vd_l {
			label = "ZM_lin_vd_l";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LCTRL &kp LGUI>
				, <&macro_tap &kp LEFT>
				, <&macro_release &kp LCTRL &kp LGUI>
				;
		};
		lin_vd_r: lin_vd_r {
			label = "ZM_lin_vd_r";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LCTRL &kp LGUI>
				, <&macro_tap &kp RIGHT>
				, <&macro_release &kp LCTRL &kp LGUI>
				;
		};
		alt_tab: alt_tab {
			label = "ZM_alt_tab";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LALT>
				, <&macro_tap &kp TAB>
				, <&macro_release &kp LALT>
				;
		};
		new_tab: new_tab {
			label = "ZM_new_tab";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LCTRL>
				, <&macro_tap &kp T>
				, <&macro_release &kp LCTRL>
				;
		};
		ctrl_w: ctrl_w {
			label = "ZM_ctrl_w";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <10>;
			tap-ms = <10>;
			bindings
				= <&macro_press &kp LCTRL>
				, <&macro_tap &kp W>
				, <&macro_release &kp LCTRL>
				;
		};
	};

	conditional_layers {
		compatible = "zmk,conditional-layers";

		lock_toggle {
			if-layers = <1 2>;
			then-layer = <4>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
// |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
// |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
// ------------------------------------------------------------------------------------------
			bindings = <
	&gresc  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL  &kp BSPC
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT  &kp BSLH
	&kp LCTRL  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT          &kp RET
	&kp LSHFT   &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH           &kp RSHFT
	&mo 1     &kp LGUI  &kp LALT             &kp SPACE                     &kp RALT  &mo 1   &kp RGUI  &kp RCTRL
			>;
		};

		fn_layer {
// ------------------------------------------------------------------------------------------------
// | BT CLR | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 | EFFECT REV |
// |  BT 1   |   |  UP |   | HUEUP | SATUP | BRIUP | SPDUP |   |     |    |     |     |           |
// |   BT 2   | LT |  DN  | RT | HUEDN | SATDN | BRIDN | SPDDN |   |     |   |     |  EFFECT FORW |
// |    BT 3     |     |      |      |     |     |     |     |     |     |     |                  |
// |   BT 4  |      |      |             TOG RGB                | PRT SCR |       |       |  DEL  |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&kp GRAVE &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8   &kp F9    &kp F10    &kp F11    &kp F12    &kp DEL
	&trans     &lin_vd_u &trans    &new_tab  &trans    &trans    &kp PG_UP &trans    &kp UP   &trans    &trans     &kp PSCRN  &kp SLCK  &kp PAUSE_BREAK
	&trans      &kp CLCK  &lin_vd_l &alt_tab  &lin_vd_r &trans    &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp INS    &trans              &trans
	&trans       &lin_vd_d  &trans   &ctrl_w   &trans    &trans    &trans    &trans    &trans   &trans   &trans                         &trans
	&trans     &trans   &trans                            &trans                                &kp PSCRN &trans    &mo 2               &trans
			>;
		};

		rgbnbt_layer {
// ------------------------------------------------------------------------------------------------
// | BT CLR | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 | EFFECT REV |
// |  BT 1   |   |  UP |   | HUEUP | SATUP | BRIUP | SPDUP |   |     |    |     |     |           |
// |   BT 2   | LT |  DN  | RT | HUEDN | SATDN | BRIDN | SPDDN |   |     |   |     |  EFFECT FORW |
// |    BT 3     |     |      |      |     |     |     |     |     |     |     |                  |
// |   BT 4  |      |      |             TOG RGB                | PRT SCR |       |       |  DEL  |
// ------------------------------------------------------------------------------------------------
			bindings = <
	&bt BT_CLR   &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP     &kp F4          &kp C_BRI_DN    &kp C_BRI_UP    &kp C_PREV  &kp C_PAUSE  &kp C_NEXT &kp F10       &kp F11 &kp F12  &rgb_ug RGB_EFR
	&bt BT_SEL 0  &tog 3     &trans       &rgb_ug RGB_HUI  &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &kp C_PAUSE &kp C_VOL_UP &trans     &kp C_BRI_UP  &trans  &trans  &trans
	&bt BT_SEL 1   &trans     &trans       &rgb_ug RGB_HUD  &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &kp C_PREV  &kp C_VOL_DN &kp C_NEXT &kp C_BRI_DN  &trans         &rgb_ug RGB_EFF
	&bt BT_SEL 2    &trans     &trans       &trans           &trans          &trans          &trans          &trans      &kp C_MUTE   &trans     &trans                      &trans
	&bt BT_SEL 3  &trans    &trans                                            &rgb_ug RGB_TOG                                         &kp PSCRN   &trans      &trans         &trans
			>;
		};

// Pseudo-shutdown layer to prevent accidental keypress while storing keyboard
// in the backpack without enclosure.
		lockdown_layer {
			bindings = <
	&none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none      &none
	&none    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none
	&none      &none  &none  &none  &none  &none  &none  &none  &none  &none  &none    &none           &none
	&none       &none  &none  &none  &none  &none  &none  &none  &none     &none   &none               &none
	&none     &none     &none                &none                         &none     &mo 1   &mo 2     &none
			>;
		};

// To escape lockdown mode, use keycombo Fn + App + Q
		lockdown_toggle {
			bindings = <
	&trans  &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans    &trans     &trans
	&trans   &tog 3 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans    &trans    &trans
	&trans     &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans   &trans          &trans
	&trans      &trans &trans &trans &trans &trans &trans &trans &trans    &trans  &trans              &trans
	&trans    &trans    &trans               &trans                        &trans    &trans  &trans    &trans
			>;
		};
	};
};
